{"version":3,"file":"static/js/33.b2c6894c.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","../node_modules/@mui/system/esm/styled.js","../node_modules/@mui/system/esm/Container/createContainer.js","../node_modules/@mui/material/Container/Container.js","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n    display: flex;\n    flex-direction: column;\n    width: 400px;\n    padding: 15px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    margin-left: 40px;\n    border: 1px solid rgba(161, 165, 161, 0.397);\n    border-radius: 8px;\n  `\nexport const Label = styled.label`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 10px;\n    font-size: 16px;\n    font-weight: 700;\n`\n\nexport const ErrorMsg = styled(ErrorMessage)`\n    font-size: 14px;\n    color: red;\n`","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n    [selectContacts, selectFilter],\n    (contacts, statusFilter) => {\n        return contacts.filter(contact => \n            contact.name.toLowerCase().includes(statusFilter.toLowerCase()))\n    }\n);\n\n","import { Formik, Field } from 'formik';\nimport * as Yup from 'yup';\nimport { ErrorMsg, Label, StyledForm } from './ContactForm.styled';\nimport { addContact } from '../../redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { Button } from '@mui/material';\n\nconst contactsSchema = Yup.object().shape({\n  name: Yup.string()\n  .min(3, 'Too Short!')\n  .required('Required'),\n  number: Yup.number()\n    .positive('Must be positive!')\n    .required('Required'),\n});\n\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectContacts)\n  \n  return (\n    <Formik\n       initialValues={{ name: '', number: '' }}\n       validationSchema = {contactsSchema}\n       onSubmit={(values, actions) => {\n        const checkContact = items.some(\n          item => item.name.toLowerCase() === values.name.toLowerCase()\n        );\n        console.log(values)\n        if(checkContact) {\n          alert(`${values.name} is already in contacts`);\n        } else {\n        dispatch(\n          addContact({\n            name: values.name,\n            number: values.number,\n          }));\n        };\n      \n        actions.resetForm();\n      }}\n     >\n       {() => (\n         <StyledForm>\n          <Label>\n            Name\n            <Field type=\"text\" name=\"name\" />\n            <ErrorMsg name=\"name\" component=\"div\" />\n          </Label>\n           <Label>\n            Number \n           <Field type=\"tel\" name=\"number\" />\n           <ErrorMsg name=\"number\" component=\"div\" />\n           </Label>\n           <Button\n           variant=\"contained\" \n           size=\"medium\"\n           type=\"submit\"\n           color=\"secondary\">\n             Add contact\n           </Button>\n         </StyledForm>\n       )}\n     </Formik>)\n}","import styled from 'styled-components';\n\nexport const List = styled.ul`\n    width: 400px;\n    padding: 15px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    margin-left: 40px;\n    border: 1px solid rgba(161, 165, 161, 0.397);\n    border-radius: 8px;\n`\n\nexport const ListItems = styled.li`\n    display: flex;\n    grid-gap: 10px;\n    align-items: center;\n`\n\nexport const Contact = styled.p`\n    width: 300px;\n    font-size: 16px;\n    font-weight: 600;\n    margin-right: 10px;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n`","import { useDispatch, useSelector } from \"react-redux\"\nimport { Contact, List, ListItems } from \"./ContactList.styled\"\nimport {selectVisibleContacts } from \"../../redux/contacts/selectors\";\nimport { deleteContact } from \"../../redux/contacts/operations\";\nimport { Button } from \"@mui/material\";\n\nexport const ContactList = () => {\n    const dispatch = useDispatch();\n    const visibleCardItems = useSelector(selectVisibleContacts)\n    \n    return (\n        <List>\n            {visibleCardItems.map(item => (\n             <ListItems key={item.id}>\n                <Contact>{item.name} : {item.number}</Contact>\n                <Button \n                variant=\"outlined\"\n                color=\"secondary\" \n                onClick={() => dispatch(deleteContact(item.id))}\n                size=\"small\"\n                >Delete</Button>\n             </ListItems>   \n            )\n                )}\n        </List>\n    )\n    \n};","import styled from 'styled-components';\n\nexport const FilterDiv = styled.div`\n    display: flex;\n    justify-content: center;\n\n    width: 400px;\n    padding: 15px;\n    margin-top: 20px;\n    margin-bottom: 20px;\n    margin-left: 40px;\n    border: 1px solid rgba(161, 165, 161, 0.397);\n    border-radius: 8px;\n`","import { useDispatch } from \"react-redux\"\nimport { FilterDiv } from \"./Filter.styled\"\n\nimport { findContact } from \"../../redux/contacts/filterSlice\";\n\nexport const Filter = () => {\n  const dispatch = useDispatch(); \n\n  return (\n        <FilterDiv>\n      <input\n        type=\"text\"\n        onChange={evt => dispatch(findContact(evt.target.value))}\n        placeholder=\"filter\"\n      />\n    </FilterDiv>\n    )\n};","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\", \"classes\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_capitalize as capitalize, unstable_composeClasses as composeClasses, unstable_generateUtilityClass as generateUtilityClass } from '@mui/utils';\nimport useThemePropsSystem from '../useThemeProps';\nimport systemStyled from '../styled';\nimport createTheme from '../createTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultTheme = createTheme();\nconst defaultCreateStyledComponent = systemStyled('div', {\n  name: 'MuiContainer',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n  }\n});\nconst useThemePropsDefault = inProps => useThemePropsSystem({\n  props: inProps,\n  name: 'MuiContainer',\n  defaultTheme\n});\nconst useUtilityClasses = (ownerState, componentName) => {\n  const getContainerUtilityClass = slot => {\n    return generateUtilityClass(componentName, slot);\n  };\n  const {\n    classes,\n    fixed,\n    disableGutters,\n    maxWidth\n  } = ownerState;\n  const slots = {\n    root: ['root', maxWidth && `maxWidth${capitalize(String(maxWidth))}`, fixed && 'fixed', disableGutters && 'disableGutters']\n  };\n  return composeClasses(slots, getContainerUtilityClass, classes);\n};\nexport default function createContainer(options = {}) {\n  const {\n    // This will allow adding custom styled fn (for example for custom sx style function)\n    createStyledComponent = defaultCreateStyledComponent,\n    useThemeProps = useThemePropsDefault,\n    componentName = 'MuiContainer'\n  } = options;\n  const ContainerRoot = createStyledComponent(({\n    theme,\n    ownerState\n  }) => _extends({\n    width: '100%',\n    marginLeft: 'auto',\n    boxSizing: 'border-box',\n    marginRight: 'auto',\n    display: 'block'\n  }, !ownerState.disableGutters && {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(2),\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('sm')]: {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }\n  }), ({\n    theme,\n    ownerState\n  }) => ownerState.fixed && Object.keys(theme.breakpoints.values).reduce((acc, breakpointValueKey) => {\n    const breakpoint = breakpointValueKey;\n    const value = theme.breakpoints.values[breakpoint];\n    if (value !== 0) {\n      // @ts-ignore\n      acc[theme.breakpoints.up(breakpoint)] = {\n        maxWidth: `${value}${theme.breakpoints.unit}`\n      };\n    }\n    return acc;\n  }, {}), ({\n    theme,\n    ownerState\n  }) => _extends({}, ownerState.maxWidth === 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up('xs')]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }\n  }, ownerState.maxWidth &&\n  // @ts-ignore module augmentation fails if custom breakpoints are used\n  ownerState.maxWidth !== 'xs' && {\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    [theme.breakpoints.up(ownerState.maxWidth)]: {\n      // @ts-ignore module augmentation fails if custom breakpoints are used\n      maxWidth: `${theme.breakpoints.values[ownerState.maxWidth]}${theme.breakpoints.unit}`\n    }\n  }));\n  const Container = /*#__PURE__*/React.forwardRef(function Container(inProps, ref) {\n    const props = useThemeProps(inProps);\n    const {\n        className,\n        component = 'div',\n        disableGutters = false,\n        fixed = false,\n        maxWidth = 'lg'\n      } = props,\n      other = _objectWithoutPropertiesLoose(props, _excluded);\n    const ownerState = _extends({}, props, {\n      component,\n      disableGutters,\n      fixed,\n      maxWidth\n    });\n\n    // @ts-ignore module augmentation fails if custom breakpoints are used\n    const classes = useUtilityClasses(ownerState, componentName);\n    return (\n      /*#__PURE__*/\n      // @ts-ignore theme is injected by the styled util\n      _jsx(ContainerRoot, _extends({\n        as: component\n        // @ts-ignore module augmentation fails if custom breakpoints are used\n        ,\n        ownerState: ownerState,\n        className: clsx(classes.root, className),\n        ref: ref\n      }, other))\n    );\n  });\n  process.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n    children: PropTypes.node,\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    component: PropTypes.elementType,\n    disableGutters: PropTypes.bool,\n    fixed: PropTypes.bool,\n    maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n    sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n  } : void 0;\n  return Container;\n}","'use client';\n\nimport PropTypes from 'prop-types';\nimport { createContainer } from '@mui/system';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nconst Container = createContainer({\n  createStyledComponent: styled('div', {\n    name: 'MuiContainer',\n    slot: 'Root',\n    overridesResolver: (props, styles) => {\n      const {\n        ownerState\n      } = props;\n      return [styles.root, styles[`maxWidth${capitalize(String(ownerState.maxWidth))}`], ownerState.fixed && styles.fixed, ownerState.disableGutters && styles.disableGutters];\n    }\n  }),\n  useThemeProps: inProps => useThemeProps({\n    props: inProps,\n    name: 'MuiContainer'\n  })\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchAllContacts } from \"../redux/contacts/operations\";\nimport { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { Loader } from \"../components/Loader\";\n\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { selectError, selectIsLoading } from \"../redux/contacts/selectors\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { Container } from \"@mui/material\";\n\nconst Contacts = () => {\n    const dispatch = useDispatch();\n    const loading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n    \n    useEffect(() => {\n        dispatch(fetchAllContacts());\n      }, [dispatch]);\n  \n  \n    return (\n        <div style={{\n          background: \"#f2f3f4\"\n        }}>\n          <Container maxWidth=\"sm\">\n            <h1>Phonebook</h1>\n            <ContactForm />\n            {loading && !error && <Loader />}\n            <h2>Contacts</h2>\n            <Filter />\n            {error && <h2>{error}</h2>}\n            <ContactList  />  \n            </Container>\n        </div>\n  )\n}\n\nexport default Contacts"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","ErrorMsg","ErrorMessage","_templateObject3","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","statusFilter","contact","name","toLowerCase","includes","contactsSchema","Yup","shape","min","required","number","positive","ContactForm","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","checkContact","some","item","console","log","alert","concat","addContact","resetForm","children","_jsxs","Field","type","component","Button","variant","size","color","List","ListItems","Contact","ContactList","visibleCardItems","map","onClick","deleteContact","id","FilterDiv","Filter","onChange","evt","findContact","target","value","placeholder","createStyled","_excluded","defaultTheme","createTheme","defaultCreateStyledComponent","systemStyled","slot","overridesResolver","props","styles","ownerState","root","capitalize","String","maxWidth","fixed","disableGutters","useThemePropsDefault","inProps","useThemePropsSystem","useUtilityClasses","componentName","classes","slots","composeClasses","generateUtilityClass","Container","options","arguments","length","undefined","_options$createStyled","createStyledComponent","_options$useThemeProp","useThemeProps","_options$componentNam","ContainerRoot","_ref","theme","_extends","width","marginLeft","boxSizing","marginRight","display","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","_ref3","Object","keys","reduce","acc","breakpointValueKey","breakpoint","unit","_ref4","Math","max","xs","React","ref","className","_props$component","_props$disableGutters","_props$fixed","_props$maxWidth","other","_objectWithoutPropertiesLoose","as","clsx","createContainer","loading","useEffect","fetchAllContacts","style","background","Loader"],"sourceRoot":""}